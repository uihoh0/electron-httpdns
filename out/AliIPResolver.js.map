{"version":3,"sources":["../src/AliIPResolver.ts"],"names":[],"mappings":";;;;;;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAEA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;;;AASO,MAAM,UAAU,GAAG,CACtB,aADsB,EAEtB,cAFsB,EAGtB,cAHsB,EAItB,cAJsB,CAAnB;;;AAaO,MAAO,aAAP,SAA6B,0BAA7B,CAA4C;AACtD,EAAA,WAAA,CAAY,MAAZ,EAAgC;AAC5B,UAAM,MAAM,CAAC,OAAP,IAAkB,UAAxB;AACA,SAAK,MAAL,GAAc,MAAM,CAAC,MAArB;AACA,SAAK,SAAL,GAAiB,MAAM,CAAC,SAAxB;AACH;;AAGM,QAAM,OAAN,CAAc,GAAd,EAAyB;AAC5B,UAAM,YAAY,GAAG,KAAI,4CAAJ,EAAyB,CAAC,QAAD,EAAgB,QAAhB,KAAuC,QAAhE,CAArB;AACA,UAAM,IAAI,GAAG,EAAb;AACA,mDAAoB,KAAI,UAAJ,EAAQ,GAAR,CAApB,EAAkC,IAAlC;AACA,QAAI,SAAJ;AACA,IAAA,SAAS,GAAG,MAAM,YAAY,CAAC,OAAb,CAAqB,IAArB,CAAlB;AACA,UAAM,MAAM,GAAqB,SAAS,GAAG,IAAI,CAAC,KAAL,CAAW,SAAX,CAAH,GAA2B,EAArE;AACA,WAAO,MAAM,CAAC,GAAd;AACH;;AACM,QAAM,gBAAN,CAAuB,SAAvB,EAAsD,IAAtD,EAAkE;AACrE,QAAI,CAAC,SAAL,EAAgB;AACZ,aAAO,EAAP;AACH;;AACD,UAAM,GAAG,GAAI,IAAI,IAAJ,EAAb;AACA,QAAI,SAAS,GAAG,GAAG,CAAC,UAAJ,CAAe,GAAG,CAAC,UAAJ,KAAmB,CAAlC,CAAhB;AACA,IAAA,SAAS,GAAG,IAAI,CAAC,KAAL,CAAW,SAAS,GAAG,IAAvB,CAAZ;AACA,WAAO,UAAU,SAAS,IAAI,KAAK,SAAS,gBAAgB,IAAI,MAAM,SAAS,MAAM,mBAAI,GAAG,IAAI,IAAI,KAAK,MAAM,IAAI,SAAS,EAAvC,CAA0C,EAA/H;AACH;;AAzBqD,C","sourcesContent":["\nimport { configureRequestUrl } from \"builder-util-runtime\"\nimport { ElectronHttpExecutor } from 'electron-updater/out/ElectronHttpExecutor'\nimport { URL } from 'url'\nimport md5 from 'md5'\n\nimport BasicIPResolver, { IPArray, HttpDnsConfig } from './BasicIPResolver'\n\nexport interface AliHttpDNSResult {\n    readonly ips: Array<string>\n    readonly host: string,\n    readonly ttl: number,\n    readonly origin_ttl: number\n}\n\nexport const aliServers = [\n    '203.107.1.1',\n    '203.107.1.33',\n    '203.107.1.34',\n    '203.107.1.35'\n]\n\nexport interface AliDnsConfig extends HttpDnsConfig {\n    secret: string,\n    accountId: string,\n    servers?: Array<string> | string\n}\n\nexport default class AliIPResolver extends BasicIPResolver {\n    constructor(config: AliDnsConfig) {\n        super(config.servers || aliServers)\n        this.secret = config.secret\n        this.accountId = config.accountId\n    }\n    protected secret:string\n    protected accountId: string\n    public async request(url: string): Promise<IPArray | null | undefined> {\n        const httpExecutor = new ElectronHttpExecutor((authInfo: any, callback: Function) => callback)\n        const opts = {}\n        configureRequestUrl(new URL(url), opts);\n        let resultStr;\n        resultStr = await httpExecutor.request(opts)\n        const result: AliHttpDNSResult = resultStr ? JSON.parse(resultStr) : {}\n        return result.ips;\n    }\n    public async createRequestUrl(dnsServer: string | undefined, host: string): Promise<string> {\n        if (!dnsServer) {\n            return '';\n        }\n        const now = (new Date());\n        let timestamp = now.setMinutes(now.getMinutes() + 4)\n        timestamp = Math.round(timestamp / 1000);\n        return `http://${dnsServer}/${this.accountId}/sign_d?host=${host}&t=${timestamp}&s=${md5(`${host}-${this.secret}-${timestamp}`)}`\n    }\n}"],"sourceRoot":""}
