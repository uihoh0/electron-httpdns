{"version":3,"sources":["../src/dnsResolverManager.ts"],"names":[],"mappings":";;;;;;;AAGA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;;;AAEA,IAAI,QAAQ,GAA4B,KAAxC;;AAEe,eAAe,kBAAf,CAAkC,OAAlC,EAA+C;AAC5D,MAAG,QAAH,EAAY;AACV,WAAO,QAAP;AACD;;AACD,MAAI,CAAC,OAAL,EAAc;AACZ,WAAO,KAAP;AACD;;AACD,UAAO,OAAO,CAAC,IAAf;AACE,SAAK,KAAL;AACE,MAAA,QAAQ,GAAI,KAAI,wBAAJ,EAAkB,OAAlB,CAAZ;AACA;;AACF;AACE;AALJ;;AAOA,SAAO,QAAP;AACD,C","sourcesContent":["\n\nimport BasicIPResolver from './BasicIPResolver'\nimport AliIPResolver from './AliIPResolver'\n\nlet resolver: BasicIPResolver | false = false\n\nexport default async function dnsResolverManager(httpdns?: any): Promise<BasicIPResolver | false> {\n  if(resolver){\n    return resolver\n  }\n  if (!httpdns) {\n    return false\n  }\n  switch(httpdns.type){\n    case 'ali': \n      resolver =  new AliIPResolver(httpdns)\n      break;\n    default: \n      break;\n  }\n  return resolver\n}"],"sourceRoot":""}
