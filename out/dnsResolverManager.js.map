{"version":3,"sources":["../src/dnsResolverManager.ts"],"names":[],"mappings":";;;;;;;AAGA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;;;AAEA,IAAI,QAAQ,GAA4B,KAAxC;;AAEc,SAAU,kBAAV,CAA6B,OAA7B,EAA0C;AACtD,MAAI,QAAJ,EAAc;AACZ,WAAO,QAAP;AACD;;AACD,MAAI,CAAC,OAAL,EAAc;AACZ,WAAO,KAAP;AACD;;AACD,UAAQ,OAAO,CAAC,IAAhB;AACE,SAAK,KAAL;AACE,MAAA,QAAQ,GAAG,KAAI,wBAAJ,EAAkB,OAAlB,CAAX;AACA;;AACF;AACE;AALJ;;AAOA,SAAO,QAAP;AACD,C","sourcesContent":["\n\nimport BasicIPResolver from './BasicIPResolver'\nimport AliIPResolver from './AliIPResolver'\n\nlet resolver: BasicIPResolver | false = false\n\nexport default function dnsResolverManager(httpdns?: any): BasicIPResolver | false {\n  if (resolver) {\n    return resolver\n  }\n  if (!httpdns) {\n    return false\n  }\n  switch (httpdns.type) {\n    case 'ali':\n      resolver = new AliIPResolver(httpdns)\n      break;\n    default:\n      break;\n  }\n  return resolver\n}"],"sourceRoot":""}
